import e from"eventemitter3";class s extends e{constructor(e={}){super(),this.options=Object.assign({renameKeys:!0,repeat:!0,listen:!0},e),this.pressedKeys={},this.pressedCodes={},document&&this.options.listen&&(document.addEventListener("keydown",this.handleKeyEvent.bind(this)),document.addEventListener("keyup",this.handleKeyEvent.bind(this)))}isKeyDown(e){return this.pressedKeys[e]||!1}isCodeDown(e){return this.pressedCodes[e]||!1}handleKeyEvent(e){if(!this.options.repeat&&e.repeat)return;const t="keydown"===e.type,r=this.options.renameKeys?s.transformKeyName(e.key):e.key,n=e.code;this.pressedKeys[r]=t,this.pressedCodes[n]=t,this.emit(e.type,r,n,e.repeat)}static transformKeyName(e){return e.toLowerCase().replace(/^arrow/,"").replace(/(^\s$)|spacebar/,"space")}}export default s;
//# sourceMappingURL=Kaybee.js.map
